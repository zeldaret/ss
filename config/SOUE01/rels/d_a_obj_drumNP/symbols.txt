_prolog = .text:0x00000000; // type:function size:0x2C scope:global
_epilog = .text:0x00000030; // type:function size:0x2C scope:global
_unresolved = .text:0x00000060; // type:function size:0x4 scope:global
__register_global_object = .text:0x00000070; // type:function size:0x1C scope:global
__destroy_global_chain = .text:0x00000090; // type:function size:0x54 scope:global
AcOdrum__ctor = .text:0x000000F0; // type:function size:0xF0
fn_265_1E0 = .text:0x000001E0; // type:function size:0x58
fn_265_240 = .text:0x00000240; // type:function size:0x6C
fn_265_2B0 = .text:0x000002B0; // type:function size:0xA0
fn_265_350 = .text:0x00000350; // type:function size:0xA4
fn_265_400 = .text:0x00000400; // type:function size:0x58
fn_265_460 = .text:0x00000460; // type:function size:0x2C
fn_265_490 = .text:0x00000490; // type:function size:0x4
fn_265_4A0 = .text:0x000004A0; // type:function size:0x1B8
AcOdrum__init = .text:0x00000660; // type:function size:0x18C
fn_265_7F0 = .text:0x000007F0; // type:function size:0x10
fn_265_800 = .text:0x00000800; // type:function size:0x8
AcOdrum__update = .text:0x00000810; // type:function size:0x324
fn_265_B40 = .text:0x00000B40; // type:function size:0x10
fn_265_B50 = .text:0x00000B50; // type:function size:0x10
fn_265_B60 = .text:0x00000B60; // type:function size:0x134
fn_265_CA0 = .text:0x00000CA0; // type:function size:0xC
fn_265_CB0 = .text:0x00000CB0; // type:function size:0xD0
fn_265_D80 = .text:0x00000D80; // type:function size:0x4
AcOdrum__stateMoveEnter = .text:0x00000D90; // type:function size:0x5C
fn_265_DF0 = .text:0x00000DF0; // type:function size:0x1C0
fn_265_FB0 = .text:0x00000FB0; // type:function size:0x28
fn_265_FE0 = .text:0x00000FE0; // type:function size:0x12C
fn_265_1110 = .text:0x00001110; // type:function size:0x2D8
fn_265_13F0 = .text:0x000013F0; // type:function size:0x18
AcOdrum__stateFallEnter = .text:0x00001410; // type:function size:0x8C
AcOdrum__stateFallIn = .text:0x000014A0; // type:function size:0xEC
AcOdrum__stateFallLeave = .text:0x00001590; // type:function size:0x18
AcOdrum__stateInitEnter = .text:0x000015B0; // type:function size:0x78
AcOdrum__stateInitUpdate = .text:0x00001630; // type:function size:0x128
AcOdrum__stateInitLeave = .text:0x00001760; // type:function size:0x60
AcOdrum__stateBeltMoveEnter = .text:0x000017C0; // type:function size:0x74
AcOdrum__stateBeltMoveIn = .text:0x00001840; // type:function size:0x148
AcOdrum__stateBeltMoveLeave = .text:0x00001990; // type:function size:0x64
AcOdrum__stateTeniNEnter = .text:0x00001A00; // type:function size:0x5C
AcOdrum__stateTeniNIn = .text:0x00001A60; // type:function size:0x64
fn_265_1AD0 = .text:0x00001AD0; // type:function size:0x10
AcOdrum__stateTeniNLeave = .text:0x00001AE0; // type:function size:0x10
fn_265_1AF0 = .text:0x00001AF0; // type:function size:0x3D4
fn_265_1ED0 = .text:0x00001ED0; // type:function size:0x10C
fn_265_1FE0 = .text:0x00001FE0; // type:function size:0x16C
fn_265_2150 = .text:0x00002150; // type:function size:0xC8
fn_265_2220 = .text:0x00002220; // type:function size:0x120
fn_265_2340 = .text:0x00002340; // type:function size:0x90
fn_265_23D0 = .text:0x000023D0; // type:function size:0x104
fn_265_24E0 = .text:0x000024E0; // type:function size:0xC8
fn_265_25B0 = .text:0x000025B0; // type:function size:0x34C
fn_265_2900 = .text:0x00002900; // type:function size:0xAC
fn_265_29B0 = .text:0x000029B0; // type:function size:0xCC
fn_265_2A80 = .text:0x00002A80; // type:function size:0xB0
fn_265_2B30 = .text:0x00002B30; // type:function size:0x200
fn_265_2D30 = .text:0x00002D30; // type:function size:0x1B0
fn_265_2EE0 = .text:0x00002EE0; // type:function size:0xF8
fn_265_2FE0 = .text:0x00002FE0; // type:function size:0x10C
fn_265_30F0 = .text:0x000030F0; // type:function size:0x60
fn_265_3150 = .text:0x00003150; // type:function size:0xC
fn_265_3160 = .text:0x00003160; // type:function size:0x1C
fn_265_3180 = .text:0x00003180; // type:function size:0x1C
fn_265_31A0 = .text:0x000031A0; // type:function size:0x1C
fn_265_31C0 = .text:0x000031C0; // type:function size:0x10
fn_265_31D0 = .text:0x000031D0; // type:function size:0x10
fn_265_31E0 = .text:0x000031E0; // type:function size:0x10
fn_265_31F0 = .text:0x000031F0; // type:function size:0x10
fn_265_3200 = .text:0x00003200; // type:function size:0x10
fn_265_3210 = .text:0x00003210; // type:function size:0x30
fn_265_3240 = .text:0x00003240; // type:function size:0x30
fn_265_3270 = .text:0x00003270; // type:function size:0x30
fn_265_32A0 = .text:0x000032A0; // type:function size:0x56C
fn_265_3810 = .text:0x00003810; // type:function size:0x58
fn_265_3870 = .text:0x00003870; // type:function size:0x88
_ctors = .ctors:0x00000000; // type:label scope:global
_dtors = .dtors:0x00000000; // type:label scope:global
__destroy_global_chain_reference = .dtors:0x00000000; // type:object size:0x4 scope:global
lbl_265_rodata_0 = .rodata:0x00000000; // type:object size:0x38 data:float
lbl_265_rodata_38 = .rodata:0x00000038; // type:object size:0x8 data:float
lbl_265_rodata_40 = .rodata:0x00000040; // type:object size:0x4 data:float
lbl_265_rodata_44 = .rodata:0x00000044; // type:object size:0x4 data:float
lbl_265_rodata_48 = .rodata:0x00000048; // type:object size:0x18 data:float
lbl_265_rodata_60 = .rodata:0x00000060; // type:object size:0x8 data:float
lbl_265_rodata_68 = .rodata:0x00000068; // type:object size:0x1C data:float
lbl_265_rodata_84 = .rodata:0x00000084; // type:object size:0x4 data:float
lbl_265_rodata_88 = .rodata:0x00000088; // type:object size:0x4 data:float
lbl_265_rodata_8C = .rodata:0x0000008C; // type:object size:0x14 data:float
lbl_265_rodata_A0 = .rodata:0x000000A0; // type:object size:0x8 data:double
lbl_265_rodata_A8 = .rodata:0x000000A8; // type:object size:0x4 data:float
lbl_265_rodata_AC = .rodata:0x000000AC; // type:object size:0x20 data:float
lbl_265_rodata_CC = .rodata:0x000000CC; // type:object size:0x4 data:float
lbl_265_rodata_D0 = .rodata:0x000000D0; // type:object size:0xC data:float
lbl_265_rodata_DC = .rodata:0x000000DC; // type:object size:0x4 data:float
lbl_265_rodata_E0 = .rodata:0x000000E0; // type:object size:0x2C data:float
lbl_265_data_0 = .data:0x00000000; // type:object size:0x58 data:4byte
lbl_265_data_58 = .data:0x00000058; // type:object size:0x18 data:string
lbl_265_data_70 = .data:0x00000070; // type:object size:0x8 data:4byte
lbl_265_data_78 = .data:0x00000078; // type:object size:0x80
lbl_265_data_F8 = .data:0x000000F8; // type:object size:0x30
lbl_265_data_128 = .data:0x00000128; // type:object size:0x30
lbl_265_data_158 = .data:0x00000158; // type:object size:0x18
lbl_265_data_170 = .data:0x00000170; // type:object size:0x18
lbl_265_data_188 = .data:0x00000188; // type:object size:0x1D0
lbl_265_data_358 = .data:0x00000358; // type:object size:0x34
__global_destructor_chain = .bss:0x00000000; // type:object size:0x4 scope:global
lbl_265_bss_8 = .bss:0x00000008; // type:object size:0x10 data:4byte
lbl_265_bss_18 = .bss:0x00000018; // type:object size:0x40 data:4byte
lbl_265_bss_58 = .bss:0x00000058; // type:object size:0x40 data:4byte
lbl_265_bss_98 = .bss:0x00000098; // type:object size:0x40 data:4byte
lbl_265_bss_D8 = .bss:0x000000D8; // type:object size:0x40 data:4byte
lbl_265_bss_118 = .bss:0x00000118; // type:object size:0x40 data:4byte
lbl_265_bss_158 = .bss:0x00000158; // type:object size:0x40 data:4byte
lbl_265_bss_198 = .bss:0x00000198; // type:object size:0x50 data:4byte

_prolog = .text:0x00000000; // type:function size:0x2C scope:global
_epilog = .text:0x00000030; // type:function size:0x2C scope:global
_unresolved = .text:0x00000060; // type:function size:0x4 scope:global
__register_global_object = .text:0x00000070; // type:function size:0x1C scope:global
__destroy_global_chain = .text:0x00000090; // type:function size:0x54 scope:global
AcOTimeDoorBefore__ctor = .text:0x000000F0; // type:function size:0x118
fn_581_210 = .text:0x00000210; // type:function size:0x58
fn_581_270 = .text:0x00000270; // type:function size:0x6C
fn_581_2E0 = .text:0x000002E0; // type:function size:0xA0
fn_581_380 = .text:0x00000380; // type:function size:0xA4
AcOTimeDoorBefore__initModels = .text:0x00000430; // type:function size:0x160
AcOTimeDoorBefore__init = .text:0x00000590; // type:function size:0x270
fn_581_800 = .text:0x00000800; // type:function size:0x10
fn_581_810 = .text:0x00000810; // type:function size:0x5C
fn_581_870 = .text:0x00000870; // type:function size:0x8
fn_581_880 = .text:0x00000880; // type:function size:0x1C4
fn_581_A50 = .text:0x00000A50; // type:function size:0x10
fn_581_A60 = .text:0x00000A60; // type:function size:0xD8
AcOTimeDoorBefore__decrement = .text:0x00000B40; // type:function size:0x1C
AcOTimeDoorBefore__draw = .text:0x00000B60; // type:function size:0x3C
fn_581_BA0 = .text:0x00000BA0; // type:function size:0x4
AcOTimeDoorBefore__stateFuncWait = .text:0x00000BB0; // type:function size:0x2AC
fn_581_E60 = .text:0x00000E60; // type:function size:0x4
fn_581_E70 = .text:0x00000E70; // type:function size:0x10C
fn_581_F80 = .text:0x00000F80; // type:function size:0x10
fn_581_F90 = .text:0x00000F90; // type:function size:0x60
fn_581_FF0 = .text:0x00000FF0; // type:function size:0xC
fn_581_1000 = .text:0x00001000; // type:function size:0x1C
fn_581_1020 = .text:0x00001020; // type:function size:0x1C
fn_581_1040 = .text:0x00001040; // type:function size:0x1C
fn_581_1060 = .text:0x00001060; // type:function size:0x10
fn_581_1070 = .text:0x00001070; // type:function size:0x10
fn_581_1080 = .text:0x00001080; // type:function size:0x10
fn_581_1090 = .text:0x00001090; // type:function size:0x10
fn_581_10A0 = .text:0x000010A0; // type:function size:0x10
fn_581_10B0 = .text:0x000010B0; // type:function size:0x10
fn_581_10C0 = .text:0x000010C0; // type:function size:0x30
fn_581_10F0 = .text:0x000010F0; // type:function size:0x30
fn_581_1120 = .text:0x00001120; // type:function size:0x30
fn_581_1150 = .text:0x00001150; // type:function size:0x10C
fn_581_1260 = .text:0x00001260; // type:function size:0x58
fn_581_12C0 = .text:0x000012C0; // type:function size:0x88
_ctors = .ctors:0x00000000; // type:label scope:global
_dtors = .dtors:0x00000000; // type:label scope:global
__destroy_global_chain_reference = .dtors:0x00000000; // type:object size:0x4 scope:global
lbl_581_rodata_0 = .rodata:0x00000000; // type:object size:0x54 data:float
lbl_581_data_0 = .data:0x00000000; // type:object size:0x10 data:4byte
lbl_581_data_10 = .data:0x00000010; // type:object size:0xC
lbl_581_data_1C = .data:0x0000001C; // type:object size:0x1C
lbl_581_data_38 = .data:0x00000038; // type:object size:0x5C
lbl_581_data_94 = .data:0x00000094; // type:object size:0x44
lbl_581_data_D8 = .data:0x000000D8; // type:object size:0x80
lbl_581_data_158 = .data:0x00000158; // type:object size:0x30
lbl_581_data_188 = .data:0x00000188; // type:object size:0x30
lbl_581_data_1B8 = .data:0x000001B8; // type:object size:0x18
lbl_581_data_1D0 = .data:0x000001D0; // type:object size:0x60
lbl_581_data_230 = .data:0x00000230; // type:object size:0x34
__global_destructor_chain = .bss:0x00000000; // type:object size:0x4 scope:global
lbl_581_bss_8 = .bss:0x00000008; // type:object size:0x10
lbl_581_bss_18 = .bss:0x00000018; // type:object size:0x30 data:4byte

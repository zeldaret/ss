_prolog = .text:0x00000000; // type:function size:0x2C scope:global
_epilog = .text:0x00000030; // type:function size:0x2C scope:global
_unresolved = .text:0x00000060; // type:function size:0x4 scope:global
__register_global_object = .text:0x00000070; // type:function size:0x1C scope:global
__destroy_global_chain = .text:0x00000090; // type:function size:0x54 scope:global
dAcOstageSink_c_classInit__Fv = .text:0x000000F0; // type:function size:0xF4
__dt__28sFState_c<15dAcOstageSink_c>Fv = .text:0x000001F0; // type:function size:0x58
__dt__31sFStateFct_c<15dAcOstageSink_c>Fv = .text:0x00000250; // type:function size:0x6C
__dt__84sStateMgr_c<15dAcOstageSink_c,20sStateMethodUsr_FI_c,12sFStateFct_c,13sStateIDChk_c>Fv = .text:0x000002C0; // type:function size:0xA0
__dt__54sFStateMgr_c<15dAcOstageSink_c,20sStateMethodUsr_FI_c>Fv = .text:0x00000360; // type:function size:0xA4
fn_383_410 = .text:0x00000410; // type:function size:0x14
fn_383_430 = .text:0x00000430; // type:function size:0x58
fn_383_490 = .text:0x00000490; // type:function size:0x38
changeState__84sStateMgr_c<15dAcOstageSink_c,20sStateMethodUsr_FI_c,12sFStateFct_c,13sStateIDChk_c>FRC12sStateIDIf_c = .text:0x000004D0; // type:function size:0x10
AcOstageSink__initModel = .text:0x000004E0; // type:function size:0xFC
AcOstageSink__init = .text:0x000005E0; // type:function size:0x120
fn_383_700 = .text:0x00000700; // type:function size:0x38
AcOstageSink__update = .text:0x00000740; // type:function size:0x108
executeState__84sStateMgr_c<15dAcOstageSink_c,20sStateMethodUsr_FI_c,12sFStateFct_c,13sStateIDChk_c>Fv = .text:0x00000850; // type:function size:0x10
AcOstageSink__draw = .text:0x00000860; // type:function size:0x28
initializeState_Wait__15dAcOstageSink_cFv = .text:0x00000890; // type:function size:0xC
executeState_Wait__15dAcOstageSink_cFv = .text:0x000008A0; // type:function size:0x1D4
AcOstageSink__decrement = .text:0x00000A80; // type:function size:0x1C
finalizeState_Wait__15dAcOstageSink_cFv = .text:0x00000AA0; // type:function size:0x4
initializeState_Move__15dAcOstageSink_cFv = .text:0x00000AB0; // type:function size:0x4
executeState_Move__15dAcOstageSink_cFv = .text:0x00000AC0; // type:function size:0x23C
finalizeState_Move__15dAcOstageSink_cFv = .text:0x00000D00; // type:function size:0x4
fn_383_D10 = .text:0x00000D10; // type:function size:0xC
fn_383_D20 = .text:0x00000D20; // type:function size:0xA0
fn_383_DC0 = .text:0x00000DC0; // type:function size:0x18
__dt__15dAcOstageSink_cFv = .text:0x00000DE0; // type:function size:0x100
getStateID__84sStateMgr_c<15dAcOstageSink_c,20sStateMethodUsr_FI_c,12sFStateFct_c,13sStateIDChk_c>CFv = .text:0x00000EE0; // type:function size:0x10
build__31sFStateFct_c<15dAcOstageSink_c>FRC12sStateIDIf_c = .text:0x00000EF0; // type:function size:0x60
dispose__31sFStateFct_c<15dAcOstageSink_c>FRP10sStateIf_c = .text:0x00000F50; // type:function size:0xC
initialize__28sFState_c<15dAcOstageSink_c>Fv = .text:0x00000F60; // type:function size:0x1C
execute__28sFState_c<15dAcOstageSink_c>Fv = .text:0x00000F80; // type:function size:0x1C
finalize__28sFState_c<15dAcOstageSink_c>Fv = .text:0x00000FA0; // type:function size:0x1C
initializeState__84sStateMgr_c<15dAcOstageSink_c,20sStateMethodUsr_FI_c,12sFStateFct_c,13sStateIDChk_c>Fv = .text:0x00000FC0; // type:function size:0x10
finalizeState__84sStateMgr_c<15dAcOstageSink_c,20sStateMethodUsr_FI_c,12sFStateFct_c,13sStateIDChk_c>Fv = .text:0x00000FD0; // type:function size:0x10
refreshState__84sStateMgr_c<15dAcOstageSink_c,20sStateMethodUsr_FI_c,12sFStateFct_c,13sStateIDChk_c>Fv = .text:0x00000FE0; // type:function size:0x10
getState__84sStateMgr_c<15dAcOstageSink_c,20sStateMethodUsr_FI_c,12sFStateFct_c,13sStateIDChk_c>CFv = .text:0x00000FF0; // type:function size:0x10
getNewStateID__84sStateMgr_c<15dAcOstageSink_c,20sStateMethodUsr_FI_c,12sFStateFct_c,13sStateIDChk_c>CFv = .text:0x00001000; // type:function size:0x10
getOldStateID__84sStateMgr_c<15dAcOstageSink_c,20sStateMethodUsr_FI_c,12sFStateFct_c,13sStateIDChk_c>CFv = .text:0x00001010; // type:function size:0x10
finalizeState__30sFStateID_c<15dAcOstageSink_c>CFR15dAcOstageSink_c = .text:0x00001020; // type:function size:0x30
executeState__30sFStateID_c<15dAcOstageSink_c>CFR15dAcOstageSink_c = .text:0x00001050; // type:function size:0x30
initializeState__30sFStateID_c<15dAcOstageSink_c>CFR15dAcOstageSink_c = .text:0x00001080; // type:function size:0x30
__sinit_\d_a_obj_stage_sink_cpp = .text:0x000010B0; // type:function size:0x1C0 scope:local
__dt__30sFStateID_c<15dAcOstageSink_c>Fv = .text:0x00001270; // type:function size:0x58
isSameName__30sFStateID_c<15dAcOstageSink_c>CFPCc = .text:0x000012D0; // type:function size:0x88
_ctors = .ctors:0x00000000; // type:label scope:global
_dtors = .dtors:0x00000000; // type:label scope:global
__destroy_global_chain_reference = .dtors:0x00000000; // type:object size:0x4 scope:global
lbl_383_rodata_0 = .rodata:0x00000000; // type:object size:0x4 data:float
lbl_383_rodata_4 = .rodata:0x00000004; // type:object size:0x4 data:float
lbl_383_rodata_8 = .rodata:0x00000008; // type:object size:0x4 data:float
lbl_383_rodata_C = .rodata:0x0000000C; // type:object size:0x4 data:float
lbl_383_rodata_10 = .rodata:0x00000010; // type:object size:0x8 data:double
g_profile_OBJ_STAGE_SINK = .data:0x00000000; // type:object size:0x10 data:4byte
lbl_383_data_10 = .data:0x00000010; // type:object size:0x4 data:4byte
lbl_383_data_14 = .data:0x00000014; // type:object size:0x48 data:4byte
lbl_383_data_5C = .data:0x0000005C; // type:object size:0x24
AcOstageSink__vtable = .data:0x00000080; // type:object size:0x80
lbl_383_data_100 = .data:0x00000100; // type:object size:0x30
lbl_383_data_130 = .data:0x00000130; // type:object size:0x30
lbl_383_data_160 = .data:0x00000160; // type:object size:0x18
lbl_383_data_178 = .data:0x00000178; // type:object size:0xA0
lbl_383_data_218 = .data:0x00000218; // type:object size:0x34
__global_destructor_chain = .bss:0x00000000; // type:object size:0x4 scope:global
lbl_383_bss_8 = .bss:0x00000008; // type:object size:0x10 data:4byte
AcOstageSink__STATE_WAIT = .bss:0x00000018; // type:object size:0x40 data:4byte
AcOstageSink__STATE_MOVE = .bss:0x00000058; // type:object size:0x30 data:4byte
STAGE_SINK_PTR = .bss:0x00000088; // type:object size:0x4 data:4byte

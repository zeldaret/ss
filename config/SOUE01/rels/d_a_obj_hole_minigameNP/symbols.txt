_prolog = .text:0x00000000; // type:function size:0x2C scope:global
_epilog = .text:0x00000030; // type:function size:0x2C scope:global
_unresolved = .text:0x00000060; // type:function size:0x4 scope:global
__register_global_object = .text:0x00000070; // type:function size:0x1C scope:global
__destroy_global_chain = .text:0x00000090; // type:function size:0x54 scope:global
AcOHoleMinigame__ctor = .text:0x000000F0; // type:function size:0x110
AcOHoleMinigameHole__ctor = .text:0x00000200; // type:function size:0x48
fn_349_250 = .text:0x00000250; // type:function size:0x68
fn_349_2C0 = .text:0x000002C0; // type:function size:0x14
fn_349_2E0 = .text:0x000002E0; // type:function size:0x58
fn_349_340 = .text:0x00000340; // type:function size:0x58
fn_349_3A0 = .text:0x000003A0; // type:function size:0x6C
fn_349_410 = .text:0x00000410; // type:function size:0xA0
fn_349_4B0 = .text:0x000004B0; // type:function size:0xA4
AcOHoleMinigame__initModels = .text:0x00000560; // type:function size:0x138
AcOHoleMinigame__init = .text:0x000006A0; // type:function size:0x1DC
fn_349_880 = .text:0x00000880; // type:function size:0x10
fn_349_890 = .text:0x00000890; // type:function size:0x8
AcOHoleMinigame__update = .text:0x000008A0; // type:function size:0x98
fn_349_940 = .text:0x00000940; // type:function size:0x10
AcOHoleMinigame__updateInEvent = .text:0x00000950; // type:function size:0x88
AcOHoleMinigame__draw = .text:0x000009E0; // type:function size:0x94
AcOHoleMinigame__stateWaitEnter = .text:0x00000A80; // type:function size:0xC
AcOHoleMinigame__stateWaitUpdate = .text:0x00000A90; // type:function size:0x54
AcOHoleMinigame__decrement = .text:0x00000AF0; // type:function size:0x1C
AcOHoleMinigame__stateWaitLeave = .text:0x00000B10; // type:function size:0x4
AcOHoleMinigame__stateStartEnter = .text:0x00000B20; // type:function size:0x3C
AcOHoleMinigame__stateStartUpdate = .text:0x00000B60; // type:function size:0x54
AcOHoleMinigame__stateStartLeave = .text:0x00000BC0; // type:function size:0x3C
AcOHoleMinigame__statePlayEnter = .text:0x00000C00; // type:function size:0x4
AcOHoleMinigame__statePlayUpdate = .text:0x00000C10; // type:function size:0x350
AcOHoleMinigame__statePlayLeave = .text:0x00000F60; // type:function size:0x4
AcOHoleMinigame__stateMessageEnter = .text:0x00000F70; // type:function size:0x4C
AcOHoleMinigame__stateMessageUpdate = .text:0x00000FC0; // type:function size:0xEC
AcOHoleMinigame__stateMessageLeave = .text:0x000010B0; // type:function size:0x4
AcOHoleMinigame__stateClearEnter = .text:0x000010C0; // type:function size:0x20
AcOHoleMinigame__stateClearUpdate = .text:0x000010E0; // type:function size:0x464
AcOHoleMinigame__stateClearLeave = .text:0x00001550; // type:function size:0x4
AcOHoleMinigame__setHolePositions = .text:0x00001560; // type:function size:0x18C
AcOHoleMinigame__getNearestHoleFromLink = .text:0x000016F0; // type:function size:0x110
AcOHoleMinigame__placeBombs = .text:0x00001800; // type:function size:0xC8
AcOHoleMinigame__placeRupoors = .text:0x000018D0; // type:function size:0xC8
AcOHoleMinigame__fillRupees = .text:0x000019A0; // type:function size:0x230
AcOHoleMinigame__fillHoles = .text:0x00001BD0; // type:function size:0x180
AcOHoleMinigame__giveDugUpRupee = .text:0x00001D50; // type:function size:0x134
AcOHoleMinigame__isBombOrRupoor = .text:0x00001E90; // type:function size:0x48
fn_349_1EE0 = .text:0x00001EE0; // type:function size:0x1C
fn_349_1F00 = .text:0x00001F00; // type:function size:0x110
fn_349_2010 = .text:0x00002010; // type:function size:0x10
fn_349_2020 = .text:0x00002020; // type:function size:0x60
fn_349_2080 = .text:0x00002080; // type:function size:0xC
fn_349_2090 = .text:0x00002090; // type:function size:0x1C
fn_349_20B0 = .text:0x000020B0; // type:function size:0x1C
fn_349_20D0 = .text:0x000020D0; // type:function size:0x1C
fn_349_20F0 = .text:0x000020F0; // type:function size:0x10
fn_349_2100 = .text:0x00002100; // type:function size:0x10
fn_349_2110 = .text:0x00002110; // type:function size:0x10
fn_349_2120 = .text:0x00002120; // type:function size:0x10
fn_349_2130 = .text:0x00002130; // type:function size:0x10
fn_349_2140 = .text:0x00002140; // type:function size:0x10
fn_349_2150 = .text:0x00002150; // type:function size:0x30
fn_349_2180 = .text:0x00002180; // type:function size:0x30
fn_349_21B0 = .text:0x000021B0; // type:function size:0x30
AcOHoleMinigame__initStates = .text:0x000021E0; // type:function size:0x3F4
fn_349_25E0 = .text:0x000025E0; // type:function size:0x58
fn_349_2640 = .text:0x00002640; // type:function size:0x88
_ctors = .ctors:0x00000000; // type:label scope:global
_dtors = .dtors:0x00000000; // type:label scope:global
__destroy_global_chain_reference = .dtors:0x00000000; // type:object size:0x4 scope:global
lbl_349_rodata_0 = .rodata:0x00000000; // type:object size:0x1C data:float
lbl_349_rodata_1C = .rodata:0x0000001C; // type:object size:0x4 data:float
lbl_349_rodata_20 = .rodata:0x00000020; // type:object size:0x4 data:float
lbl_349_rodata_24 = .rodata:0x00000024; // type:object size:0x4 data:float
lbl_349_rodata_28 = .rodata:0x00000028; // type:object size:0x4 data:float
lbl_349_rodata_2C = .rodata:0x0000002C; // type:object size:0xC data:float
lbl_349_rodata_38 = .rodata:0x00000038; // type:object size:0x8 data:double
lbl_349_rodata_40 = .rodata:0x00000040; // type:object size:0x8 data:double
lbl_349_data_0 = .data:0x00000000; // type:object size:0x10 data:4byte
lbl_349_data_10 = .data:0x00000010; // type:object size:0x10
lbl_349_data_20 = .data:0x00000020; // type:object size:0x10
lbl_349_data_30 = .data:0x00000030; // type:object size:0x20 data:string
lbl_349_data_50 = .data:0x00000050; // type:object size:0x40
lbl_349_data_90 = .data:0x00000090; // type:object size:0x80
lbl_349_data_110 = .data:0x00000110; // type:object size:0x30
lbl_349_data_140 = .data:0x00000140; // type:object size:0x30
lbl_349_data_170 = .data:0x00000170; // type:object size:0x18
lbl_349_data_188 = .data:0x00000188; // type:object size:0x18
lbl_349_data_1A0 = .data:0x000001A0; // type:object size:0x174
lbl_349_data_314 = .data:0x00000314; // type:object size:0x34
lbl_349_data_348 = .data:0x00000348; // type:object size:0x8
__global_destructor_chain = .bss:0x00000000; // type:object size:0x4 scope:global
lbl_349_bss_8 = .bss:0x00000008; // type:object size:0x10 data:4byte
lbl_349_bss_18 = .bss:0x00000018; // type:object size:0x40 data:4byte
lbl_349_bss_58 = .bss:0x00000058; // type:object size:0x40 data:4byte
lbl_349_bss_98 = .bss:0x00000098; // type:object size:0x40 data:4byte
lbl_349_bss_D8 = .bss:0x000000D8; // type:object size:0x40 data:4byte
lbl_349_bss_118 = .bss:0x00000118; // type:object size:0x30 data:4byte

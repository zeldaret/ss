_prolog = .text:0x00000000; // type:function size:0x2C scope:global
_epilog = .text:0x00000030; // type:function size:0x2C scope:global
_unresolved = .text:0x00000060; // type:function size:0x4 scope:global
__register_global_object = .text:0x00000070; // type:function size:0x1C scope:global
__destroy_global_chain = .text:0x00000090; // type:function size:0x54 scope:global
AcOLavaPlate__ctor = .text:0x000000F0; // type:function size:0x144
fn_473_240 = .text:0x00000240; // type:function size:0x58
fn_473_2A0 = .text:0x000002A0; // type:function size:0x6C
fn_473_310 = .text:0x00000310; // type:function size:0xA0
fn_473_3B0 = .text:0x000003B0; // type:function size:0xA4
AcOLavaPlate__initModels = .text:0x00000460; // type:function size:0x1AC
AcOLavaPlate__init = .text:0x00000610; // type:function size:0x1D8
fn_473_7F0 = .text:0x000007F0; // type:function size:0x10
fn_473_800 = .text:0x00000800; // type:function size:0x8
AcOLavaPlate__update = .text:0x00000810; // type:function size:0x98
fn_473_8B0 = .text:0x000008B0; // type:function size:0x10
AcOLavaPlate__updateInEvent = .text:0x000008C0; // type:function size:0x134
AcOLavaPlate__decrement = .text:0x00000A00; // type:function size:0x1C
AcOLavaPlate__draw = .text:0x00000A20; // type:function size:0x3C
fn_473_A60 = .text:0x00000A60; // type:function size:0x4
AcOLavaPlate__stateWaitUpdate = .text:0x00000A70; // type:function size:0x7C
AcOLavaPlate__stateWaitLeave = .text:0x00000AF0; // type:function size:0xA4
AcOLavaPlate__stateMoveEnter = .text:0x00000BA0; // type:function size:0x40
AcOLavaPlate__stateMoveUpdate = .text:0x00000BE0; // type:function size:0x78
fn_473_C60 = .text:0x00000C60; // type:function size:0x4
AcOLavaPlate__stateSuccessEnter = .text:0x00000C70; // type:function size:0xD0
fn_473_D40 = .text:0x00000D40; // type:function size:0x4
fn_473_D50 = .text:0x00000D50; // type:function size:0x4
fn_473_D60 = .text:0x00000D60; // type:function size:0x4
AcOLavaPlate__moveMaybe = .text:0x00000D70; // type:function size:0xD8
AcOLavaPlate__updateAll = .text:0x00000E50; // type:function size:0x84
fn_473_EE0 = .text:0x00000EE0; // type:function size:0x11C
AcOLavaPlate__dtor = .text:0x00001000; // type:function size:0x10C
fn_473_1110 = .text:0x00001110; // type:function size:0x10
fn_473_1120 = .text:0x00001120; // type:function size:0x60
fn_473_1180 = .text:0x00001180; // type:function size:0xC
fn_473_1190 = .text:0x00001190; // type:function size:0x1C
fn_473_11B0 = .text:0x000011B0; // type:function size:0x1C
fn_473_11D0 = .text:0x000011D0; // type:function size:0x1C
fn_473_11F0 = .text:0x000011F0; // type:function size:0x10
fn_473_1200 = .text:0x00001200; // type:function size:0x10
fn_473_1210 = .text:0x00001210; // type:function size:0x10
fn_473_1220 = .text:0x00001220; // type:function size:0x10
fn_473_1230 = .text:0x00001230; // type:function size:0x10
fn_473_1240 = .text:0x00001240; // type:function size:0x10
fn_473_1250 = .text:0x00001250; // type:function size:0x30
fn_473_1280 = .text:0x00001280; // type:function size:0x30
fn_473_12B0 = .text:0x000012B0; // type:function size:0x30
fn_473_12E0 = .text:0x000012E0; // type:function size:0x27C
fn_473_1560 = .text:0x00001560; // type:function size:0x58
fn_473_15C0 = .text:0x000015C0; // type:function size:0x88
_ctors = .ctors:0x00000000; // type:label scope:global
_dtors = .dtors:0x00000000; // type:label scope:global
__destroy_global_chain_reference = .dtors:0x00000000; // type:object size:0x4 scope:global
lbl_473_rodata_0 = .rodata:0x00000000; // type:object size:0x10 data:float
lbl_473_rodata_10 = .rodata:0x00000010; // type:object size:0xC
lbl_473_rodata_1C = .rodata:0x0000001C; // type:object size:0x3C data:float
lbl_473_data_0 = .data:0x00000000; // type:object size:0x44 data:4byte
lbl_473_data_44 = .data:0x00000044; // type:object size:0x2C
lbl_473_data_70 = .data:0x00000070; // type:object size:0x80
lbl_473_data_F0 = .data:0x000000F0; // type:object size:0x30
lbl_473_data_120 = .data:0x00000120; // type:object size:0x30
lbl_473_data_150 = .data:0x00000150; // type:object size:0x18
lbl_473_data_168 = .data:0x00000168; // type:object size:0xE8
lbl_473_data_250 = .data:0x00000250; // type:object size:0x34
__global_destructor_chain = .bss:0x00000000; // type:object size:0x4 scope:global
lbl_473_bss_8 = .bss:0x00000008; // type:object size:0x50 data:4byte
lbl_473_bss_58 = .bss:0x00000058; // type:object size:0x40 data:4byte
lbl_473_bss_98 = .bss:0x00000098; // type:object size:0x30 data:4byte
lbl_473_bss_C8 = .bss:0x000000C8; // type:object size:0x1 data:byte
lbl_473_bss_CC = .bss:0x000000CC; // type:object size:0xC data:float
